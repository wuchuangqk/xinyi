<template>
	<view class="page">
		<map style="width: 100%;height: 400px;" :latitude="latitude" :longitude="longitude" :markers="covers"></map>
		{{latitude}} - {{longitude}}
	</view>
</template>

<script>
	import {
		getOne
	} from '../../api/system/attendance.js'
	export default {
		data() {
			return {
				id:0, 
				/* latitude: 39.909,
				longitude: 116.39742,
				covers: [{
					latitude: 39.909,
					longitude: 116.39742,
					iconPath: '../../static/img/logo.png'
				}] */
				latitude: 34.212816,
				            longitude: 117.294367,
				            covers: [{
				                latitude: 34.212816,
				                longitude: 117.294367,
				                // iconPath: '../../../static/location.png'
				            }]
			}
		},
		onReady() {
			// return
			getOne().then(res => {
				const result = this.translate(res.longitude,res.latitude)
				this.latitude = result.latitude
				this.longitude = result.longitude
				this.covers[0].latitude = result.latitude
				this.covers[0].longitude = result.longitude
				
				/* this.covers = [
					{
						latitude: this.latitude,
						longitude: this.longitude,
						iconPath: '../../../static/location.png'
					}
				] */
			})
		},
		methods: {
			translate(bdLon, bdLat) {
				const x_pi = 3.14159265358979324 * 3000.0 / 180.0
				const x = bdLon - 0.0065
				const y = bdLat - 0.006;
				        var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_pi);
				        var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_pi);
				        var gcjLon = z * Math.cos(theta);
				        var gcjLat = z * Math.sin(theta);
				        return {'latitude' : gcjLat, 'longitude' : gcjLon};
			}
		}
	}
</script>

<style>

</style>
